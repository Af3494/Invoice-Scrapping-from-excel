<Activity mc:Ignorable="sap sap2010" x:Class="Data_extraction" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1078.4,4662.4" sap2010:WorkflowViewState.IdRef="Data_extraction_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upap="clr-namespace:UiPath.PDF.Activities.PDF;assembly=UiPath.PDF.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="36">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>PDFtoExcel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.PDF.Activities.PDF</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="31">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>PDFExcelFile</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="We are checking here in continuation from main work flow if the file path exists and creating a folder to save our data as we proceed with out workflow" DisplayName="Data scrapping and extraction from the PDF files" sap:VirtualizedContainerService.HintSize="904,4597.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="[&quot;C:\Users\&quot;+Environment.UserName+&quot;\Documents\Project 2\Invoices&quot;]" Name="invoicePath" />
      <Variable x:TypeArguments="x:String" Name="customerName" />
      <Variable x:TypeArguments="x:String" Name="invoiceNumber" />
      <Variable x:TypeArguments="x:String" Name="invoiceDate" />
      <Variable x:TypeArguments="x:String" Default="[&quot;C:\Users\&quot;+Environment.UserName+&quot;\Documents\Project 2\Excel Data&quot;]" Name="customerExcelDataPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:PathExists Exists="{x:Null}" DisplayName="Path Exists" sap:VirtualizedContainerService.HintSize="862.4,90.4" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[invoicePath]" PathType="Folder" />
    <ui:CreateDirectory ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="We have created a folder where we will be saving all customer specifc excel files in one particular folder for the process below" DisplayName="Creating Folder to save all excel files with customer data" sap:VirtualizedContainerService.HintSize="862.4,140.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[customerExcelDataPath]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CreateDirectory>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="We are looping in for each activity to check for each attachment downloaded for extraction of data" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="862.4,4162.4" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetFiles(invoicePath)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="file" />
          </ActivityAction.Argument>
          <Sequence sap2010:Annotation.AnnotationText="We are spliting the file names to string to exract the customer name, date and invoice number from the attachment file names" DisplayName="Body" sap:VirtualizedContainerService.HintSize="827.2,4006.4" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:String[]" Name="withoutExt" />
              <Variable x:TypeArguments="sd:DataTable" Default="[New System.Data.DataTable]" Name="ExtractDataTable" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="785.6,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[withoutExt]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[path.GetFileNameWithoutExtension(file).split("_"c)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:MultipleAssign sap2010:Annotation.AnnotationText="We are doing this to split the name of the file and extract the customer name, invoice number and date" DisplayName="Getting the file name to string" sap:VirtualizedContainerService.HintSize="785.6,208" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[customerName]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[withoutExt(0)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[invoiceNumber]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[withoutExt(2)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[invoiceDate]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[withoutExt(1)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MultipleAssign>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="785.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="[customerName]" />
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="785.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[invoiceDate]" />
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="785.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[invoiceNumber]" />
            <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" sap2010:Annotation.AnnotationText="We are starting a process to open each file and extract the order information." DisplayName="Start Process" FileName="[file]" sap:VirtualizedContainerService.HintSize="785.6,132" sap2010:WorkflowViewState.IdRef="StartProcess_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:StartProcess>
            <Sequence sap2010:Annotation.AnnotationText="We have developed a If condition based on the number of pages to extract the data" DisplayName="Checking for page count of the attachments" sap:VirtualizedContainerService.HintSize="785.6,3055.2" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Name="pgCount" />
                <Variable x:TypeArguments="sd:DataTable" Name="ExtractDataTable2" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <upap:GetPDFPageCount DisplayName="Get PDF Page Count" FileName="[file]" sap:VirtualizedContainerService.HintSize="744,60" sap2010:WorkflowViewState.IdRef="GetPDFPageCount_1" PageCount="[pgCount]" />
              <Sequence DisplayName="Data Scraping of first invoice page" sap:VirtualizedContainerService.HintSize="744,2831.2" sap2010:WorkflowViewState.IdRef="Sequence_19">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'JaneDoe_0 Acrobatsd'" sap:VirtualizedContainerService.HintSize="702.4,2547.2" sap2010:WorkflowViewState.IdRef="WindowScope_5" InformativeScreenshot="3ba9e7fd0ccc3912dea7ccc1042e7f65" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC (32-bit)' /&gt;">
                  <ui:WindowScope.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Scraping the table into excel" sap:VirtualizedContainerService.HintSize="668.8,2400" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Default="[&quot;C:\Users\&quot;+Environment.UserName+&quot;\Documents\Project 2\Excel Data&quot;+&quot;\&quot;+customerName+&quot;_&quot;+invoiceNumber+&quot;.xlsx&quot;]" Name="indCustExcelData" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExtractData DelayBetweenPagesMS="{x:Null}" NextLinkSelector="{x:Null}" ContinueOnError="True" DataTable="[ExtractDataTable]" DisplayName="Extract Structured Data 'table'" ExtractMetadata="&lt;extract-table get_columns_name='1' get_empty_columns='1' columns_name_source='Longest' /&gt;" sap:VirtualizedContainerService.HintSize="627.2,107.2" sap2010:WorkflowViewState.IdRef="ExtractData_4" MaxNumberOfResults="100" SimulateClick="True">
                          <ui:ExtractData.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4fbf5b22-5729-4554-8018-9a802df92cb4" InformativeScreenshot="dd5941dc9fc0767b738792ce92a1e8fa" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='2' role='table' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:ExtractData.Target>
                        </ui:ExtractData>
                        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope - Creation of cutomer invoice sheets" sap:VirtualizedContainerService.HintSize="627.2,2160" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="[indCustExcelData]">
                          <ui:ExcelApplicationScope.Body>
                            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Scraping of invoice" sap:VirtualizedContainerService.HintSize="593.6,2050.4" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExcelWriteRange AddHeaders="True" DataTable="[ExtractDataTable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="552,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Sheet1" StartingCell="A1" />
                                <Sequence sap2010:Annotation.AnnotationText="We are appending the data from subsequnt pages onto the main sheet" DisplayName="Data Scraping of pages 2 and above" sap:VirtualizedContainerService.HintSize="552,1638.4" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="gst" />
                                    <Variable x:TypeArguments="x:String" Name="subTotal" />
                                    <Variable x:TypeArguments="x:String" Name="total" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[pgCount&gt;1]" sap:VirtualizedContainerService.HintSize="510.4,807.2" sap2010:WorkflowViewState.IdRef="If_3">
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="475.2,628" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="combineDTs" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'JoeyTribb Acrobatsd'" sap:VirtualizedContainerService.HintSize="433.6,535.2" sap2010:WorkflowViewState.IdRef="WindowScope_7" InformativeScreenshot="89a933c65d5c9f8d67b261356f891e9d" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' omit:title='JoeyTribbiani_01102020_281092.pdf - Adobe Acrobat Reader DC (32-*' /&gt;">
                                          <ui:WindowScope.Body>
                                            <ActivityAction x:TypeArguments="x:Object">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Appending the data extract from subsequent pages" sap:VirtualizedContainerService.HintSize="375.2,388" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:ExtractData DelayBetweenPagesMS="{x:Null}" NextLinkSelector="{x:Null}" ContinueOnError="True" DataTable="[ExtractDataTable2]" DisplayName="Extract Structured Data 'table'" ExtractMetadata="&lt;extract-table get_columns_name='1' get_empty_columns='1' columns_name_source='Longest' /&gt;" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="ExtractData_6" MaxNumberOfResults="100" SimulateClick="True">
                                                  <ui:ExtractData.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="582efe6f-840a-4103-a931-0604ed15cf24" InformativeScreenshot="125ee330890b230bc828f24041b54d04" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='3' role='table' /&gt;">
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                      <ui:Target.WaitForReady>
                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                      </ui:Target.WaitForReady>
                                                    </ui:Target>
                                                  </ui:ExtractData.Target>
                                                </ui:ExtractData>
                                                <ui:ExcelAppendRange sap2010:Annotation.AnnotationText="We have extracted he data from the second page and stored it in a different variable and appended the excel sheet" DataTable="[ExtractDataTable2]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="333.6,148" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_5" SheetName="Sheet1">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:ExcelAppendRange>
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:WindowScope.Body>
                                        </ui:WindowScope>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_31">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                  <ui:ExcelReadRange DataTable="{x:Null}" AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="510.4,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Sheet1">
                                    <ui:ExcelReadRange.Range>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </ui:ExcelReadRange.Range>
                                  </ui:ExcelReadRange>
                                  <Assign sap:VirtualizedContainerService.HintSize="510.4,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[subTotal]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[ExtractDataTable.Select(“Convert(PRICE, System.String) = 'Sub Total '”)(0)(“TOTAL”).ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="510.4,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="[subTotal]" />
                                  <Assign sap:VirtualizedContainerService.HintSize="510.4,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[gst]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[ExtractDataTable.Select(“Convert(PRICE, System.String) = 'GST 8% '”)(0)(“TOTAL”).ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="510.4,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="[gst]" />
                                  <Assign sap:VirtualizedContainerService.HintSize="510.4,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[total]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[ExtractDataTable.Select(“PRICE = 'Total '”)(0)(“TOTAL”).ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="510.4,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_11" Text="[total]" />
                                </Sequence>
                                <ui:CloseApplication sap2010:Annotation.AnnotationText="We are closing the application to ensure and avoid any interruptions to the scrapping process" DisplayName="Close Application 'Pane  Ribbon'" sap:VirtualizedContainerService.HintSize="552,151.2" sap2010:WorkflowViewState.IdRef="CloseApplication_3">
                                  <ui:CloseApplication.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e0a8f827-8394-493a-bd00-c37b5476ab2d" InformativeScreenshot="1975af9a7c44a91f8ee044a926114ca8" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*.xlsx - Excel' /&gt;&lt;uia cls='MsoCommandBar' helpText='Ribbon toolbar' /&gt;&lt;uia cls='NetUInetpane' name='Ribbon' /&gt;">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:CloseApplication.Target>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:CloseApplication>
                              </Sequence>
                            </ActivityAction>
                          </ui:ExcelApplicationScope.Body>
                        </ui:ExcelApplicationScope>
                      </Sequence>
                    </ActivityAction>
                  </ui:WindowScope.Body>
                </ui:WindowScope>
                <ui:CloseApplication sap2010:Annotation.AnnotationText="We are closing the application to ensure and avoid any interruptions to the scrapping process" DisplayName="Close Application 'document'" sap:VirtualizedContainerService.HintSize="702.4,151.2" sap2010:WorkflowViewState.IdRef="CloseApplication_10">
                  <ui:CloseApplication.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="62207918-b1f7-4e83-b5e2-668898c850d0" InformativeScreenshot="2c3bc9f95e5e42d4ef314e39fef34e75" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC (32-bit*' /&gt;&lt;ctrl idx='2' role='document' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:CloseApplication.Target>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CloseApplication>
              </Sequence>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
  </Sequence>
</Activity>